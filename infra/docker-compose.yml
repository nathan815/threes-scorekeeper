version: '3.7'

services:
  frontend-bundle:
    extends:
      file: docker-compose.build.yml
      service: frontend-bundle
    restart: 'no'
    volumes:
      - ./frontend-www:/var/www

  backend:
    extends:
      file: docker-compose.build.yml
      service: backend
    restart: always
    env_file:
      - backend.env
    environment:
      PORT: 80
    depends_on:
      - db

  nginx:
    image: nginx:latest
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./frontend-www:/var/www/app:ro
      - ./nginx/conf.d:/etc/nginx/conf.d/:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro

  test-nginx:
    image: nginx:latest
    restart: always
    ports:
      - 9980:80
      - 9443:443
    volumes:
      - ./frontend-www:/var/www/app:ro
      - ./nginx/conf.d:/etc/nginx/conf.d/:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

  db:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: '${DB_USER}'
      MONGO_INITDB_ROOT_PASSWORD: '${DB_PASSWORD}'
      MONGO_INITDB_DATABASE: '${DB_NAME}'
    volumes:
      - /var/lib/mongodb/data:/data/db
